
deployment {
    #Memory to be request for a node
	memory-per-node = 7000
	
	#arguments for the jvm, make sure you are not using -Xmx -Xms
	# because these will be set depending on the memory-per-node.
	jvm-arguments = "-XX:+AggressiveOpts -XX:+AlwaysPreTouch -XX:+UseNUMA -XX:-UseBiasedLocking -XX:MaxInlineSize=1024 -XX:-UseBiasedLocking -XX:+UnlockExperimentalVMOptions -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSIncrementalPacing -XX:+CMSIncrementalMode -XX:ParallelGCThreads=10 -XX:ParallelCMSThreads=10"
	
	#number of nodes to be requested
	number-of-nodes = 5

    #files which will be copied to the cluster
	copy-files = []
	
	#algorith which will be executed.
	# Must be of type com.signalcollect.deployment.Algorithm and a scala object.
	algorithm = "com.signalcollect.deployment.PageRankExample$"
	
	#parameters which will be passed to the algorithm as Map[String,String]
	algorithm-parameters {
		#"parameter" = "value"
		#"number-of-readers" = "2"
		#"length-data" = "26172280241"
		#"length-data" = "110135128"
	}
	
    #implementation of the Cluster to be used
	#cluster = "com.signalcollect.deployment.LocalCluster" 
	#cluster = "com.signalcollect.deployment.LeaderCluster"
	cluster = "com.signalcollect.deployment.yarn.YarnCluster"
	#cluster = "com.signalcollect.deployment.amazon.AmazonCluster"
	
	#after this timeout in seconds the execution will shutdwon 
	timeout = 400
	
	#settings for the akka configuration
    akka {
      
	  port: 2552
      kryo-initializer = "com.signalcollect.configuration.KryoInit"
      kryo-registrations = [
        #"some.class.to.be.registered"
      ]
      serialize-messages = true
      loggers = ["com.signalcollect.logging.AkkaLog4JAdapter"]
      log-level = "info"
	}
}
